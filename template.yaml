AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Macro to sets tags on a S3 bucket
Parameters:
  Department:
    Description: 'The department for this resource'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'Platform'
  Project:
    Description: 'The name of the project that this resource is used for'
    Type: String
    AllowedPattern: '^\S*$'
    ConstraintDescription: 'Must be string with no spaces'
    Default: 'Infrastructure'
  OwnerEmail:
    Description: 'Email address of the owner of this resource'
    Type: String
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: 'Must be an acceptable email address syntax(i.e. joe.smith@sagebase.org)'
    Default: 'it@sagebase.org'

Globals:
  Function:
    Timeout: 3

Resources:
  SetBucketTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: set_bucket_tags/
      Handler: app.handler
      Role: !GetAtt FunctionRole.Arn
      Runtime: python3.6
      Tags:
        Department: !Ref Department
        Project: !Ref Project
        OwnerEmail: !Ref OwnerEmail

  SetBucketTagsMacro:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: SetBucketTags
      FunctionName: !GetAtt SetBucketTagsFunction.Arn

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref BucketTagPolicy

  BucketTagPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: GetAndPutBucketTags
            Effect: 'Allow'
            Action:
              - 's3:GetBucketTagging'
              - 's3:PutBucketTagging'
            Resource: '*'

Outputs:
  SetBucketTagsFunctionName:
    Value: !Ref SetBucketTagsFunction
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBucketTagsFunctionName'
  SetBucketTagsFunctionArn:
    Value: !GetAtt SetBucketTagsFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-SetBucketTagsFunctionArn'
